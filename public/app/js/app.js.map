{"version":3,"sources":["app.js","controllers/branchAddController.js","controllers/branchEditController.js","controllers/branchListController.js","controllers/employeeAddController.js","controllers/employeeEditController.js","controllers/employeeListController.js","controllers/formCreateController.js","controllers/mainController.js","controllers/userController.js","models/branchModel.js","models/employeeModel.js","models/userModel.js","models/validationModel.js"],"names":[],"mappingsrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\r\n * Created by ubuntu on 6/29/16.\r\n */\r\nvar myApp = angular.module('hrmPayroll', ['ngRoute', 'ngCookies','ui.bootstrap']);\r\n\r\nmyApp.config(function ($routeProvider, $locationProvider) {\r\n    function template(name) {\r\n        return 'app/templates/' + name;\r\n    }\r\n\r\n    /**\r\n     * Define the route of the paths\r\n     * isAuth parameter defines the state of the route\r\n     * -1 == Not logged in\r\n     * 0 == Weather login or logout\r\n     * 1 == login\r\n     */\r\n    $routeProvider\r\n        .when('/', {\r\n            templateUrl: template('admin/login.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'userController',\r\n            authenticated: false\r\n        });\r\n    $routeProvider\r\n        .when('/dashboard', {\r\n            templateUrl: template('dashboard/dashboard.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'userController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when('/employee/add', {\r\n            templateUrl: template('employees/create.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'employeeAddController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when('/employees/list', {\r\n            templateUrl: template('employees/list.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'employeeAddController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when(('/employees/edit/:empID'), {\r\n            templateUrl: template('employees/edit.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'employeeEditController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when('/branches/list', {\r\n            templateUrl: template('branches/list.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'branchListController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when('/branch/add', {\r\n            templateUrl: template('branches/create.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'branchAddController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when(('/branch/edit/:branchID'), {\r\n            templateUrl: template('branches/edit.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'branchEditController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider\r\n        .when('/form/create', {\r\n            templateUrl: template('form/create.html'),\r\n            reloadOnSearch: true,\r\n            controller: 'formCreateController',\r\n            authenticated: true\r\n        });\r\n    $routeProvider.otherwise('/');\r\n    /**\r\n     * This will remove hash bang from the routes\r\n     */\r\n    $locationProvider.html5Mode(true).hashPrefix('!');\r\n\r\n});\r\n\r\nmyApp.run([\"$rootScope\", \"$location\", 'userModel', function ($rootScope, $location, userModel) {\r\n    $rootScope.$on(\"$routeChangeStart\", function (event, next, current) {\r\n        if (next.$$route.authenticated) {\r\n            if (!userModel.getAuthStatus()) {\r\n                $location.path('/');\r\n            }\r\n        }\r\n        if (next.$$route.originalPath == '/') {\r\n            if (userModel.getAuthStatus()) {\r\n                $location.path(current.$$route.originalPath);\r\n            }\r\n        }\r\n    })\r\n}]);","myApp.controller('branchAddController', ['$scope', '$timeout', '$location', 'userModel', 'branchModel', function ($scope, $timeout, $location, userModel, branchModel) {\r\n    $scope.successStatus = false;\r\n    $scope.errorStatus = false;\r\n    angular.extend($scope, {\r\n        addNewBranch: function () {\r\n            if ($scope.branchAdd.$valid) {\r\n                var branchData = {\r\n                    name: $scope.branch.branch_name,\r\n                    address1: $scope.branch.address1,\r\n                    address2: $scope.branch.address2,\r\n                    city: $scope.branch.city,\r\n                    phone: $scope.branch.phone,\r\n                    fax: $scope.branch.fax,\r\n                };\r\n\r\n                branchModel.doCreateBranch(branchData).success(function (response) {\r\n                    angular.element('.success-message-container').html(response.message);\r\n                    $scope.successStatus = true;\r\n                    $scope.errorStatus = false;\r\n                    $timeout(function () {\r\n                        $location.path('/branches/list');\r\n                    }, 3000);\r\n                }).error(function (data, status, header) {\r\n                    angular.element('.error-message-container').html(data.message);\r\n                    $scope.errorStatus = true;\r\n                    $scope.successStatus = false;\r\n                });\r\n            }\r\n        }\r\n    });\r\n}]);\r\n","myApp.controller('branchEditController', ['$scope', '$timeout', '$location', '$routeParams', 'userModel', 'branchModel', function ($scope, $timeout, $location, $routeParams, userModel, branchModel) {\r\n    $scope.successStatus = false;\r\n    $scope.errorStatus = false;\r\n    $scope.branch = {};\r\n    var branchID = $.trim($routeParams.branchID);\r\n    $timeout(function () {\r\n        $scope.getBranchData(branchID);\r\n    }, 100);\r\n\r\n    $scope.getBranchData = function (branchID) {\r\n        if (branchID != '') {\r\n            branchModel.getBranchById(branchID).success(function (response) {\r\n                $scope.branch.branch_name = response.data.name;\r\n                $scope.branch.address1 = response.data.address1;\r\n                $scope.branch.address2 = response.data.address2;\r\n                $scope.branch.city = response.data.city;\r\n                $scope.branch.phone = response.data.phone;\r\n                $scope.branch.fax = response.data.fax;\r\n            });\r\n        }\r\n    }\r\n\r\n    $scope.updateBranch = function () {\r\n        if ($scope.branchEdit.$valid) {\r\n            var branchData = {\r\n                name: $scope.branch.branch_name,\r\n                address1: $scope.branch.address1,\r\n                address2: $scope.branch.address2,\r\n                city: $scope.branch.city,\r\n                phone: $scope.branch.phone,\r\n                fax: $scope.branch.fax,\r\n            };\r\n\r\n            branchModel.doUpdateBranch(branchData, branchID).success(function (response) {\r\n                angular.element('.success-message-container').html(response.message);\r\n                $scope.successStatus = true;\r\n                $scope.errorStatus = false;\r\n                $timeout(function () {\r\n                    $location.path('/branches/list');\r\n                }, 3000);\r\n            }).error(function (data, status, header) {\r\n                angular.element('.error-message-container').html(data.message);\r\n                $scope.errorStatus = true;\r\n                $scope.successStatus = false;\r\n            });\r\n        }\r\n    }\r\n\r\n}]);\r\n","/**\r\n * Created by rashinika on 9/4/2016.\r\n */\r\nmyApp.controller('branchListController', ['$scope', '$timeout', '$routeParams', '$location', 'userModel', 'branchModel', function ($scope, $timeout, $routeParams, $location, userModel, branchModel) {\r\n    $scope.branchList = {};\r\n    $scope.totalItems;\r\n    $scope.perPage;\r\n    $scope.nextPage;\r\n    $scope.params={};\r\n    var pageNumber = $.trim($routeParams.page);\r\n    $timeout(function () {\r\n        $scope.getBranches(pageNumber);\r\n    }, 100);\r\n\r\n    $scope.getBranches = function (pageNum) {\r\n        branchModel.getBranches(pageNum).success(function (response) {\r\n            $scope.branchList = response.data.data;\r\n            $scope.totalItems = response.data.last_page;\r\n            $scope.perPage = response.data.per_page;\r\n            $scope.nextPage = $scope.params.page + 1;\r\n          //   $location.path('/branches/list?page=' + pageNum);\r\n           // console.log($scope.params.page)\r\n        });\r\n    }\r\n\r\n}]);\r\n","myApp.controller('employeeAddController', ['$scope', '$timeout', '$location', 'userModel', 'employeeModel', function ($scope, $timeout, $location, userModel, employeeModel) {\r\n    $scope.successStatus = false;\r\n    $scope.employee={};\r\n    $timeout(function () {\r\n        $('#empWizard').bootstrapWizard({'tabClass': 'nav nav-pills'});\r\n        $(\".select_drop\").select2();\r\n        $('#joined_date').datepicker({\r\n            autoclose: true\r\n        });\r\n        $('#birthday').datepicker({\r\n            autoclose: true\r\n        });\r\n        $('#confirmation_date').datepicker({\r\n            autoclose: true\r\n        });\r\n    }, 100);\r\n\r\n    $scope.addNewEmployee = function () {\r\n        if ($scope.employeeAdd.$valid) {\r\n            var employeeData = {\r\n                epf: $scope.employee.epf,\r\n                full_name: $scope.employee.full_name,\r\n                first_name: $scope.employee.first_name,\r\n                middle_name: $scope.employee.middle_name,\r\n                last_name: $scope.employee.last_name,\r\n                gender: $scope.employee.gender,\r\n                marital_status: $scope.employee.marital_status,\r\n                nic_num: $scope.employee.nic_num,\r\n                driving_license: $scope.employee.driving_license,\r\n                birthday: $scope.employee.birthday,\r\n                address1: $scope.employee.address1,\r\n                address2: $scope.employee.address2,\r\n                city: $scope.employee.city,\r\n                postal_code: $scope.employee.postal_code,\r\n                home_phone: $scope.employee.home_phone,\r\n                mobile_phone: $scope.employee.mobile_phone,\r\n                work_phone: $scope.employee.work_phone,\r\n                private_email: $scope.employee.private_email,\r\n                section: $scope.employee.section,\r\n                pay_grade: $scope.employee.pay_grade,\r\n                joined_date: $scope.employee.joined_date,\r\n                confirmation_date: $scope.employee.confirmation_date,\r\n                salary: $scope.employee.salary,\r\n                trans_allow: $scope.employee.trans_allow,\r\n                br_allowance: $scope.employee.br_allowance,\r\n                special_allow: $scope.employee.special_allow,\r\n                att_allow: $scope.employee.att_allow\r\n            };\r\n            employeeModel.addEmployee(employeeData).success(function (response) {\r\n                angular.element('.success-message-container').html(response.message);\r\n                $scope.successStatus = true;\r\n                $scope.errorStatus = false;\r\n                $timeout(function () {\r\n                    $location.path('/employees/list');\r\n                }, 3000);\r\n            }).error(function (data, status, header) {\r\n                angular.element('.error-message-container').html(data.message);\r\n                $scope.errorStatus = true;\r\n                $scope.successStatus = false;\r\n            });\r\n\r\n        }\r\n    };\r\n\r\n    $scope.choices = [{id: 'choice1'}, {id: 'choice2'}];\r\n\r\n    $scope.addNewAllowance = function() {\r\n        var newItemNo = $scope.choices.length+1;\r\n        $scope.choices.push({'id':'choice'+newItemNo});\r\n    };\r\n\r\n    $scope.removeAllowance = function() {\r\n        var lastItem = $scope.choices.length-1;\r\n        $scope.choices.splice(lastItem);\r\n    };\r\n\r\n}]);\r\n","myApp.controller('employeeEditController', ['$scope', '$timeout', '$location', '$routeParams', 'userModel', 'employeeModel', function ($scope, $timeout, $location, $routeParams, userModel, employeeModel) {\r\n    $scope.successStatus = false;\r\n    $scope.errorStatus = false;\r\n    $scope.employee = {};\r\n    var empID = $.trim($routeParams.empID);\r\n    $timeout(function () {\r\n        $scope.getEmployeeDataById(empID);\r\n        $(\".select_drop\").select2();\r\n    }, 100);\r\n    $scope.getEmployeeDataById = function (empID) {\r\n        if (empID != '') {\r\n            employeeModel.getEmployeeById(empID).success(function (response) {\r\n                $scope.employee.epf = response.data.epf;\r\n                $scope.employee.full_name = response.data.name;\r\n                $scope.employee.first_name = response.data.first_name;\r\n                $scope.employee.middle_name = response.data.middle_name;\r\n                $scope.employee.last_name = response.data.last_name;\r\n                $scope.employee.gender = response.data.gender;\r\n                $scope.employee.marital_status = response.data.marital_status;\r\n                $scope.employee.nic_num = response.data.nic_num;\r\n                $scope.employee.driving_license = response.data.driving_license;\r\n                $scope.employee.birthday = response.data.birthday;\r\n                $scope.employee.address1 = response.data.address1;\r\n                $scope.employee.address2 = response.data.address2;\r\n                $scope.employee.city = response.data.city;\r\n\r\n            });\r\n        }\r\n    }\r\n\r\n   /* $scope.updateBranch = function () {\r\n        if ($scope.branchEdit.$valid) {\r\n            var branchData = {\r\n                name: $scope.branch.branch_name,\r\n                address1: $scope.branch.address1,\r\n                address2: $scope.branch.address2,\r\n                city: $scope.branch.city,\r\n                phone: $scope.branch.phone,\r\n                fax: $scope.branch.fax,\r\n            };\r\n\r\n            branchModel.doUpdateBranch(branchData, branchID).success(function (response) {\r\n                angular.element('.success-message-container').html(response.message);\r\n                $scope.successStatus = true;\r\n                $scope.errorStatus = false;\r\n                $timeout(function () {\r\n                    $location.path('/branches/list');\r\n                }, 3000);\r\n            }).error(function (data, status, header) {\r\n                angular.element('.error-message-container').html(data.message);\r\n                $scope.errorStatus = true;\r\n                $scope.successStatus = false;\r\n            });\r\n        }\r\n    }*/\r\n\r\n}]);\r\n","myApp.controller('employeeListController', ['$scope', '$timeout', '$routeParams', '$location', 'userModel', 'employeeModel', function ($scope, $timeout, $routeParams, $location, userModel, employeeModel) {\r\n    $scope.employeeList = {};\r\n    $scope.employeeTablePages = {};\r\n    $scope.totalItems;\r\n    $scope.perPage;\r\n    $scope.nextPage;\r\n    $scope.params={};\r\n    var pageNumber = $.trim($routeParams.page);\r\n    $timeout(function () {\r\n        $scope.getEmployees(pageNumber);\r\n\r\n    }, 100);\r\n    $scope.getEmployees = function (pageNum) {\r\n        employeeModel.getEmployees(pageNum).success(function (response) {\r\n            $scope.employeeList = response.data.data;\r\n            $scope.totalItems = response.data.last_page;\r\n            $scope.perPage = response.data.per_page;\r\n            $scope.nextPage = $scope.params.page + 1;\r\n        });\r\n    }\r\n}]);\r\n","myApp.controller('formCreateController', ['$scope', '$timeout', '$location', 'userModel', 'branchModel', function ($scope, $timeout, $location, userModel, branchModel) {\r\n    $scope.successStatus = false;\r\n    $scope.errorStatus = false;\r\n    $timeout(function () {\r\n\r\n    }, 100);\r\n}]);\r\n","/**\r\n * Created by Rajindra on 8/16/2016.\r\n */\r\nmyApp.controller('mainController', ['$scope', 'userModel', function ($scope, userModel) {\r\n    $scope.isError = false;\r\n    $scope.errors = {}\r\n    $scope.loggedIn = false;\r\n    $scope.$on(\"userLogged\",function () {\r\n        if (userModel.getAuthStatus()) {\r\n            $scope.loggedIn = true;\r\n        } else {\r\n            $scope.loggedIn = false;\r\n        }\r\n    });\r\n\r\n    if(userModel.getAuthStatus()){\r\n        $scope.loggedIn = true;\r\n    }\r\n    angular.extend($scope, {})\r\n\r\n}]);","myApp.controller('userController', ['$scope', '$location','$rootScope', 'userModel', function ($scope, $location,$rootScope, userModel) {\r\n    angular.extend($scope, {\r\n\r\n        doLogin: function () {\r\n            var loginData = {\r\n                username: $scope.login.username,\r\n                password: $scope.login.password\r\n            };\r\n            userModel.doLogin(loginData).then(function (data) {\r\n                $rootScope.$broadcast(\"userLogged\");\r\n                $location.path('/dashboard');\r\n            });\r\n\r\n        },\r\n        doLogout: function () {\r\n            userModel.doLogout();\r\n            window.location.href = '/';\r\n        }\r\n    });\r\n}]);\r\n\r\n","myApp.factory('branchModel', ['$http', '$cookies', 'userModel', function ($http, $cookies, userModel) {\r\n    var branchModel = {};\r\n    branchModel.doCreateBranch = function (branchData) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/branches',\r\n            method: \"POST\",\r\n            data: {\r\n                name: branchData.name,\r\n                address1: branchData.address1,\r\n                address2: branchData.address2,\r\n                city: branchData.city,\r\n                phone: branchData.phone,\r\n                fax: branchData.fax,\r\n            }\r\n        });\r\n    };\r\n    branchModel.getBranches = function (pageNum) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/branches?page='+pageNum,\r\n            method: \"GET\"\r\n        });\r\n    };\r\n    branchModel.getBranchById = function (branchID) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/branches/' + branchID + '/edit',\r\n            method: \"GET\"\r\n        });\r\n    };\r\n    branchModel.doUpdateBranch = function (branchData, branchID) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/branches/' + branchID,\r\n            method: \"PUT\",\r\n            data: {\r\n                name: branchData.name,\r\n                address1: branchData.address1,\r\n                address2: branchData.address2,\r\n                city: branchData.city,\r\n                phone: branchData.phone,\r\n                fax: branchData.fax,\r\n            }\r\n        });\r\n    }\r\n    return branchModel;\r\n}]);\r\n\r\n\r\n/*\r\n .success(function (response) {\r\n angular.element('.success-message-container').html(response.data.message);\r\n $scope.successStatus = true;\r\n }).error(function (data, status, header) {\r\n angular.element('.error-message-container').html(data.message);\r\n $scope.errorStatus = true;\r\n });*/\r\n","myApp.factory('employeeModel', ['$http', 'userModel', function ($http, userModel) {\r\n    var employeeModel = {};\r\n    employeeModel.addEmployee = function (empData) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/employees',\r\n            method: \"POST\",\r\n            data: {\r\n                epf: empData.epf,\r\n                name: empData.full_name,\r\n                first_name: empData.first_name,\r\n                middle_name: empData.middle_name,\r\n                last_name: empData.last_name,\r\n                gender: empData.gender,\r\n                marital_status: empData.marital_status,\r\n                nic_num: empData.nic_num,\r\n                driving_license: empData.driving_license,\r\n                birthday: empData.birthday,\r\n                address1: empData.address1,\r\n                address2: empData.address2,\r\n                city: empData.city,\r\n                postal_code: empData.postal_code,\r\n                home_phone: empData.home_phone,\r\n                mobile_phone: empData.mobile_phone,\r\n                work_phone: empData.work_phone,\r\n                private_email: empData.private_email,\r\n                section: empData.section,\r\n                pay_grade: empData.pay_grade,\r\n                joined_date: empData.joined_date,\r\n                confirmation_date: empData.confirmation_date,\r\n                salary: empData.salary,\r\n                trans_allow: empData.trans_allow,\r\n                br_allowance: empData.br_allowance,\r\n                special_allow: empData.special_allow,\r\n                att_allow: empData.att_allow\r\n            }\r\n        });\r\n    };\r\n    employeeModel.getEmployees = function (pageNum) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/employees?page='+pageNum,\r\n            method: \"GET\"\r\n        });\r\n    };\r\n    employeeModel.getEmployeeById = function (empID) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json',\r\n                'X-Requested-With': 'XMLHttpRequest',\r\n                'x-auth-token': userModel.getToken(),\r\n            },\r\n            url: baseURL + 'api/employees/' + empID + '/edit',\r\n            method: \"GET\"\r\n        });\r\n    };\r\n    return employeeModel;\r\n}]);","/**\r\n * Created by ubuntu on 7/24/16.\r\n */\r\nmyApp.factory('userModel', ['$http', '$cookies', function ($http, $cookies) {\r\n    var userModel = {};\r\n    userModel.doLogin = function (loginData) {\r\n        return $http({\r\n            'headers': {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            url: baseURL + 'api/login',\r\n            method: \"POST\",\r\n            data: {\r\n                username: loginData.username,\r\n                password: loginData.password,\r\n            }\r\n        }).success(function (response) {\r\n            $cookies.put('auth', JSON.stringify(response));\r\n        }).error(function (data, status, header) {\r\n            return data;\r\n        });\r\n    };\r\n    userModel.getAuthStatus = function () {\r\n        var status = $cookies.get('auth');\r\n\r\n        if (status) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    userModel.doLogout = function () {\r\n        $cookies.remove('auth');\r\n    };\r\n    userModel.getToken = function () {\r\n        var user = this.getLoggedUser();\r\n        user = JSON.parse(user).data;\r\n        return user && user.token ? user.token : '';\r\n    };\r\n    userModel.getLoggedUser = function () {\r\n        return $cookies.get('auth');\r\n    };\r\n    return userModel;\r\n}]);","/**\r\n * Created by Rajindra on 8/20/2016.\r\n */\r\nmyApp.factory('validationModel', [function () {\r\n    return {\r\n\r\n        email: function (email) {\r\n            var pattern = /^[+a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n            return pattern.test(email);\r\n        },\r\n\r\n        numbers: function (value) {\r\n            var pattern = /^[0-9]+$/;\r\n            return pattern.test(value);\r\n        },\r\n\r\n        alphaNumeric: function (value) {\r\n            var pattern = /^[a-zA-Z0-9]+$/;\r\n            return pattern.test(value);\r\n        },\r\n\r\n        searchText: function (value) {\r\n            var pattern = /^[A-Za-z\\d\\s]+$/;\r\n            return pattern.test(value);\r\n        },\r\n\r\n        empty: function (value) {\r\n            if (typeof value == \"undefined\" || value == null || value == \"null\" || value == \"\") {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n    };\r\n}]);"],"sourceRoot":"/source/"}